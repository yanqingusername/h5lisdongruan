{"remainingRequest":"/Users/user/coyote/h5Distribution/node_modules/babel-loader/lib/index.js!/Users/user/coyote/h5Distribution/src/request/requestH5Other.js","dependencies":[{"path":"/Users/user/coyote/h5Distribution/src/request/requestH5Other.js","mtime":1652699189199},{"path":"/Users/user/coyote/h5Distribution/node_modules/cache-loader/dist/cjs.js","mtime":1652332326496},{"path":"/Users/user/coyote/h5Distribution/node_modules/babel-loader/lib/index.js","mtime":1652332326384}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvdXNlci9jb3lvdGUvaDVEaXN0cmlidXRpb24vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBxcyBmcm9tICJxcyI7Ci8qKgogKiDlhbHnlKjor7fmsYLmlrnms5VINQogKi8KCnZhciByZXF1ZXN0SDUgPSBheGlvcy5jcmVhdGUoewogIGNyZXdpdGhkZW50aWFsczogdHJ1ZSwKICAvLyDot6jln5/or7fmsYLml7blj5HpgIFjb29raWVzCiAgdGltZW91dDogMTAwMDAsCiAgLy8gcmVxdWVzdEg1IHRpbWVvdXQKICBiYXNlVVJMOiAnL2xpc19hbGFybScKfSk7IC8vIGF4aW9zLmRlZmF1bHRzLmJhc2VVUkwgPSAnL2xpc19hbGFybScKCmF4aW9zLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgaWYgKGNvbmZpZy5tZXRob2QgPT09ICdwb3N0JykgewogICAgaWYgKGNvbmZpZy5kYXRhICYmICFjb25maWcuZGF0YS5pKSB7CiAgICAgIGNvbmZpZy5oZWFkZXJzWydDb250ZW50LVR5cGUnXSA9ICdtdWx0aXBhcnQvZm9ybS1kYXRhJzsgLy/phY3nva7or7fmsYLlpLQKICAgICAgLy8gY29uZmlnLmhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PVVURi04JzsKICAgIH0gZWxzZSB7CiAgICAgIGNvbmZpZy5kYXRhID0gUXMuc3RyaW5naWZ5KGNvbmZpZy5kYXRhKTsKICAgIH0KICB9CgogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwovKioKICogQHBhcmFtIHt1cmx9IFN0cmluZyDot6/nlLHlnLDlnYAKICogQHBhcmFtIHt2YWx9IE9iZWpjdCDkvKDovpPnmoTmlbDmja4KICogQHBhcmFtIHttZXRob2R9IFN0cmluZyDor7fmsYLmlrnlvI8KICovCgpleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKCkgewogIHZhciB1cmwgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6ICIvIjsKICB2YXIgdmFsID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTsKICB2YXIgbWV0aG9kID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAiZ2V0IjsKICByZXR1cm4gcmVxdWVzdEg1KF9kZWZpbmVQcm9wZXJ0eSh7CiAgICB1cmw6IHVybCwKICAgIG1ldGhvZDogbWV0aG9kCiAgfSwgbWV0aG9kID09PSAiZ2V0IiA/ICJwYXJhbXMiIDogImRhdGEiLCBtZXRob2QgPT09ICJnZXQiID8gdmFsIDogcXMuc3RyaW5naWZ5KHZhbCkpKTsKfSk7"},{"version":3,"sources":["/Users/user/coyote/h5Distribution/src/request/requestH5Other.js"],"names":["axios","qs","requestH5","create","crewithdentials","timeout","baseURL","interceptors","request","use","config","method","data","i","headers","Qs","stringify","error","Promise","reject","url","val"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA;AACA;AACA;;AACA,IAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC7BC,EAAAA,eAAe,EAAE,IADY;AACN;AACvBC,EAAAA,OAAO,EAAE,KAFoB;AAEb;AAChBC,EAAAA,OAAO,EAAE;AAHoB,CAAb,CAAlB,C,CAKA;;AAEAN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAACC,MAAD,EAAY;AACzC,MAAIA,MAAM,CAACC,MAAP,KAAkB,MAAtB,EAA8B;AAC5B,QAAID,MAAM,CAACE,IAAP,IAAe,CAACF,MAAM,CAACE,IAAP,CAAYC,CAAhC,EAAmC;AACjCH,MAAAA,MAAM,CAACI,OAAP,CAAe,cAAf,IAAiC,qBAAjC,CADiC,CAEjC;AACA;AAED,KALD,MAKK;AACHJ,MAAAA,MAAM,CAACE,IAAP,GAAcG,EAAE,CAACC,SAAH,CAAaN,MAAM,CAACE,IAApB,CAAd;AACD;AACF;;AACD,SAAOF,MAAP;AACD,CAZD,EAYG,UAACO,KAAD,EAAW;AACZ,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAdD;AAgBA;AACA;AACA;AACA;AACA;;AACA,gBAAe;AAAA,MAACG,GAAD,uEAAO,GAAP;AAAA,MAAYC,GAAZ,uEAAkB,EAAlB;AAAA,MAAsBV,MAAtB,uEAA+B,KAA/B;AAAA,SACbT,SAAS;AACPkB,IAAAA,GAAG,EAAHA,GADO;AAEPT,IAAAA,MAAM,EAANA;AAFO,KAGNA,MAAM,KAAK,KAAX,GAAmB,QAAnB,GAA8B,MAHxB,EAILA,MAAM,KAAK,KAAX,GAAmBU,GAAnB,GAAyBpB,EAAE,CAACe,SAAH,CAAaK,GAAb,CAJpB,EADI;AAAA,CAAf","sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\n\n/**\n * 共用请求方法H5\n */\nconst requestH5 = axios.create({\n  crewithdentials: true, // 跨域请求时发送cookies\n  timeout: 10000, // requestH5 timeout\n  baseURL: '/lis_alarm'\n});\n// axios.defaults.baseURL = '/lis_alarm'\n\naxios.interceptors.request.use((config) => {\n  if (config.method === 'post') {\n    if( config.data && !config.data.i ){\n      config.headers['Content-Type'] = 'multipart/form-data';\n      //配置请求头\n      // config.headers['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n\n    }else{\n      config.data = Qs.stringify(config.data);\n    }\n  }\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n})\n\n/**\n * @param {url} String 路由地址\n * @param {val} Obejct 传输的数据\n * @param {method} String 请求方式\n */\nexport default (url = \"/\", val = {}, method = \"get\") =>\n  requestH5({\n    url,\n    method,\n    [method === \"get\" ? \"params\" : \"data\"]:\n      method === \"get\" ? val : qs.stringify(val)\n  });\n"]}]}